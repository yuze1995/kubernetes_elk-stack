apiVersion: v1
kind: ConfigMap
metadata:
  namespace: elk
  name: logstash-pipeline
  labels:
    logstash: logstash
data:
  logstash.conf: |
    input {
      beats {
        port => 5044
        codec => json
      }
      tcp {
        port => 5000
        codec => json
      }
    }
    filter {
      split {
        field => "events"
      }
      ruby {
        code => "
          event.get('events').each do |k, v|
            event.set(k, v)
          end
        "
      }
      mutate {
        remove_field => [ "events" ]
      }
      grok {		
        match => [ "RenderedMessage", "\[%{DATA:httpVerb}\] \[%{DATA:host}\] \[%{DATA:url}\] \[%{DATA:referrerUrl}\] \[%{DATA:queryString}\] \[%{DATA:body}\] \[%{DATA:transactionId}\] \[%{DATA:companyId}\] \[%{DATA:employeeId}\]" ]
      }
      date {
        timezone => "Asia/Taipei"
        match => ["Timestamp", "yyyy-MM-dd HH:mm:ss.SSSSSZ", "ISO8601"]
        target => "@timestamp"
      }
      mutate {
        remove_field => [ "Timestamp" ]
        remove_tag => [ "_rubyexception", "_grokparsefailure"]
      }
    }
    output {
      elasticsearch {
        hosts => "elasticsearch-svc.elk.svc.cluster.local:9200"
        user => "elastic"
        password => "password"
        ecs_compatibility => disabled
      }
      stdout { }
    }